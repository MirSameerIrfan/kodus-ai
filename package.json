{
    "name": "kodus-orchestrator",
    "version": "0.0.1",
    "description": "",
    "author": "",
    "license": "UNLICENSED",
    "scripts": {
        "build": "nest build",
        "build:production": "nest build ",
        "build:fast": "NODE_OPTIONS='--max-old-space-size=8192' nest build --webpack",
        "build:incremental": "tsc --build --incremental",
        "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
        "start": "nest start --debug 0.0.0.0:9229",
        "start:dev": "NODE_OPTIONS='--trace-warnings' nest start --watch --debug 0.0.0.0:9229",
        "start:debug": "nest start --debug --watch",
        "start:prod": "node dist/main",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "test": "node --max-old-space-size=4096 ./node_modules/.bin/jest --forceExit --runInBand --detectOpenHandles",
        "test:dev": "cross-env API_NODE_ENV=development jest --detectOpenHandles",
        "test:watch": "jest --watch",
        "test:cov": "jest --coverage",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli",
        "migration:generate": "f() { yarn typeorm migration:generate -p -d ./src/config/database/typeorm/ormconfig.ts \"./src/config/database/typeorm/migrations/$@\"; }; f",
        "migration:run": "yarn typeorm migration:run -d ./src/config/database/typeorm/ormconfig.ts",
        "migration:revert": "yarn typeorm migration:revert -d ./src/config/database/typeorm/ormconfig.ts",
        "migration:run:prod": "node ./node_modules/typeorm/cli.js migration:run -d ./dist/config/database/typeorm/ormconfig.js",
        "migration:revert:prod": "node ./node_modules/typeorm/cli.js migration:revert -d ./dist/config/database/typeorm/ormconfig.js",
        "seed": "ts-node -r tsconfig-paths/register src/config/database/typeorm/seed/seed.ts",
        "seed:prod": "node dist/config/database/typeorm/seed/seed.js",
        "script": "ts-node -r tsconfig-paths/register src/config/scripts/main.script.ts",
        "docker:build": "docker compose -f docker-compose.dev.yml build",
        "docker:build:small": "yarn docker:clean:small && docker compose -f docker-compose.dev.small.yml build",
        "docker:up": "docker compose -f docker-compose.dev.yml up",
        "docker:up:small": "docker compose -f docker-compose.dev.small.yml up",
        "docker:down": "docker compose -f docker-compose.dev.yml down",
        "docker:down:small": "docker compose -f docker-compose.dev.small.yml down",
        "docker:start": "yarn docker:down && yarn docker:up",
        "docker:start:small": "yarn docker:down:small && yarn docker:up:small",
        "docker:clean:small": "docker compose -f docker-compose.dev.small.yml down && docker volume rm kodus-ai_yalc_store kodus-ai_node_modules_cache || true",
        "docker:up:small:watch": "docker compose -f docker-compose.dev.small.yml up --watch",
        "docker:watch": "yarn docker:down && yarn docker:up -d",
        "docker:watch:small": "yarn docker:down:small && yarn docker:up:small -d",
        "test:commit": "yarn docker:start -d && yarn test && yarn docker:down",
        "docker:logs": "docker logs -f kodus-orchestrator",
        "sentry:sourcemaps": "sentry-cli sourcemaps inject --org kodus --project kodus-orchestrator ./dist && sentry-cli sourcemaps upload --org kodus --project kodus-orchestrator ./dist",
        "prepare": "husky",
        "dev:yalc": "yarn dev:yalc:up && yarn dev:yalc:init && yarn dev:yalc:watch && yarn docker:logs",
        "dev:yalc:up": "docker compose -f docker-compose.dev.small.yml up -d --build",
        "dev:yalc:init": "docker compose -f docker-compose.dev.small.yml exec kodus-orchestrator sh -lc \"cd packages/kodus-flow && yarn install && yarn build && yalc publish --sig && cd /usr/src/app && yalc add @kodus/flow && yarn install\"",
        "dev:yalc:watch": "docker compose -f docker-compose.dev.small.yml exec -d kodus-orchestrator sh -lc \"cd packages/kodus-flow && (yarn build:watch &); (chokidar 'dist/**/*' -c 'yalc push --changed --sig' & )\"",
        "yalc:update:flow": "docker compose -f docker-compose.dev.small.yml exec kodus-orchestrator sh -lc \"cd /usr/src/app && yalc update @kodus/flow && yarn install\"",
        "yalc:remove:flow": "docker compose -f docker-compose.dev.small.yml exec kodus-orchestrator sh -lc \"cd /usr/src/app && yalc remove @kodus/flow && yarn install\"",
        "dev:yalc:clean": "docker compose -f docker-compose.dev.small.yml down && docker volume rm kodus-ai_yalc_store kodus-ai_node_modules_cache || true"
    },
    "dependencies": {
        "@anthropic-ai/sdk": "^0.58.0",
        "@aws-sdk/client-s3": "^3.859.0",
        "@faker-js/faker": "^9.9.0",
        "@gitbeaker/rest": "^43.3.0",
        "@golevelup/nestjs-rabbitmq": "^6.0.2",
        "@google/generative-ai": "^0.24.1",
        "@kodus/flow": "file:.yalc/@kodus/flow",
        "@kodus/kodus-common": "^1.2.3",
        "@kodus/kodus-proto": "https://registry.npmjs.org/@kodus/kodus-proto/-/kodus-proto-3.1.2.tgz",
        "@langchain/anthropic": "^0.3.25",
        "@langchain/cohere": "^0.3.4",
        "@langchain/community": "0.3.47",
        "@langchain/core": "^0.3.61",
        "@langchain/google-genai": "^0.2.14",
        "@langchain/google-vertexai": "^0.2.14",
        "@langchain/mongodb": "^0.1.0",
        "@langchain/openai": "0.5.16",
        "@modelcontextprotocol/sdk": "^1.17.1",
        "@nestjs/axios": "^4.0.1",
        "@nestjs/cache-manager": "^3.0.1",
        "@nestjs/common": "^11.1.5",
        "@nestjs/config": "^4.0.2",
        "@nestjs/core": "^11.1.5",
        "@nestjs/devtools-integration": "^0.2.1",
        "@nestjs/jwt": "^11.0.0",
        "@nestjs/microservices": "^11.1.5",
        "@nestjs/mongoose": "^11.0.3",
        "@nestjs/passport": "^11.0.5",
        "@nestjs/platform-express": "^11.1.5",
        "@nestjs/schedule": "^6.0.0",
        "@nestjs/terminus": "^11.0.0",
        "@nestjs/typeorm": "^11.0.0",
        "@octokit/auth-app": "^8.0.2",
        "@octokit/auth-oauth-app": "^9.0.1",
        "@octokit/rest": "^22.0.0",
        "@opentelemetry/api": "1.9.0",
        "@opentelemetry/instrumentation-nestjs-core": "^0.49.0",
        "@opentelemetry/instrumentation-pino": "^0.50.0",
        "@opentelemetry/sdk-trace-node": "^2.0.1",
        "@outropy/ts-sdk": "^0.0.12",
        "@segment/analytics-node": "^2.3.0",
        "@sentry/cli": "^2.50.2",
        "@sentry/nestjs": "^10.1.0",
        "@sentry/node": "^10.1.0",
        "@sentry/opentelemetry": "^10.1.0",
        "@sentry/profiling-node": "^10.1.0",
        "@slack/web-api": "^7.9.3",
        "@tavily/core": "^0.5.10",
        "add": "^2.0.6",
        "ajv": "^8.17.1",
        "amqp-connection-manager": "^4.1.14",
        "amqplib": "^0.10.8",
        "axios": "^1.11.0",
        "azure-devops-node-api": "^15.1.0",
        "bcryptjs": "^3.0.2",
        "bitbucket": "^2.12.0",
        "blocked-at": "^1.2.0",
        "body-parser": "^2.2.0",
        "cache-manager": "^7.1.0",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.14.2",
        "connection-string": "^4.4.0",
        "cross-env": "^10.0.0",
        "date-fns": "^4.1.0",
        "diff": "^8.0.2",
        "express-rate-limit": "^8.0.1",
        "fast-glob": "^3.3.3",
        "file-type": "21.0.0",
        "glob": "^11.0.3",
        "graphql": "^16.11.0",
        "handlebars": "^4.7.8",
        "helmet": "^8.1.0",
        "http-status-codes": "^2.3.0",
        "immer": "^10.1.1",
        "joi": "^17.13.3",
        "js-yaml": "^4.1.0",
        "json5": "^2.2.3",
        "langchain": "^0.3.28",
        "langsmith": "0.3.52",
        "mailersend": "^2.6.0",
        "micromatch": "^4.0.8",
        "ml-kmeans": "^6.0.0",
        "moment": "^2.30.1",
        "moment-timezone": "^0.6.0",
        "mongoose": "^8.17.0",
        "mongoose-paginate": "^5.0.3",
        "nanoid": "^5.1.5",
        "neo4j-driver": "^5.28.1",
        "nestjs-pino": "^4.4.0",
        "nodemailer-express-handlebars": "^7.0.0",
        "octokit": "^5.0.3",
        "openai": "^5.12.0",
        "opossum": "^9.0.0",
        "p-limit": "^6.2.0",
        "passport": "^0.7.0",
        "passport-jwt": "^4.0.1",
        "pg": "^8.16.3",
        "pg-promise": "^11.15.0",
        "pgvector": "^0.2.1",
        "picomatch": "^4.0.3",
        "pino-http": "^10.5.0",
        "pino-pretty": "^13.1.1",
        "posthog-node": "^5.6.0",
        "ramda": "^0.31.3",
        "reflect-metadata": "^0.2.2",
        "rxjs": "^7.8.2",
        "simple-git": "^3.28.0",
        "source-map-support": "^0.5.21",
        "tiktoken": "^1.0.21",
        "tslib": "^2.8.1",
        "typeorm": "^0.3.25",
        "typeorm-extension": "^3.7.1",
        "typescript-language-server": "^4.4.0",
        "uuid": "^11.1.0",
        "volleyball": "^1.5.1",
        "weaviate-ts-client": "^2.2.0",
        "whatwg-url": "14.2.0",
        "yarn": "^1.22.22",
        "zod": "^3.25.76",
        "zod-to-json-schema": "^3.24.6"
    },
    "devDependencies": {
        "@nestjs/cli": "^11.0.10",
        "@nestjs/schematics": "^11.0.7",
        "@nestjs/testing": "^11.1.5",
        "@octokit/types": "^14.1.0",
        "@types/amqplib": "^0.10.7",
        "@types/cron": "^2.4.3",
        "@types/express": "^5.0.3",
        "@types/helmet": "^4.0.0",
        "@types/jest": "^30.0.0",
        "@types/js-yaml": "^4.0.9",
        "@types/moment-timezone": "^0.5.30",
        "@types/node": "^24.2.0",
        "@types/passport-jwt": "^4.0.1",
        "@types/ramda": "^0.31.0",
        "@types/supertest": "^6.0.3",
        "@typescript-eslint/eslint-plugin": "^8.39.0",
        "@typescript-eslint/parser": "^8.39.0",
        "concurrently": "^9.2.0",
        "esbuild": "^0.25.8",
        "eslint": "^9.32.0",
        "eslint-config-prettier": "^10.1.8",
        "eslint-plugin-prettier": "^5.5.4",
        "husky": "^9.1.7",
        "jest": "^30.0.5",
        "nodemon": "^3.1.10",
        "prettier": "^3.6.2",
        "supertest": "^7.1.4",
        "ts-jest": "^29.4.1",
        "ts-loader": "^9.5.2",
        "ts-node": "^10.9.2",
        "tsconfig-paths": "^4.2.0",
        "typescript": "^5.9.2"
    },
    "resolutions": {
        "moment": "^2.29.4"
    },
    "jest": {
        "moduleNameMapper": {
            "^@/(.*)$": "<rootDir>/src/$1",
            "^test/mocks/(.*)$": "<rootDir>/test/mocks/$1"
        },
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "roots": [
            "src",
            "test"
        ],
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "**/*.(t|j)s"
        ],
        "coverageDirectory": "../coverage",
        "testEnvironment": "node"
    }
}
